import { createDefaultModule, DefaultModuleContext, inject, LangiumServices, Module, PartialLangiumServices } from 'langium';
import { LangiumGameGeneratedModule } from './generated/module';
import { LangiumGameValidationRegistry, LangiumGameValidator } from './langium-game-validator';

/**
 * Declaration of custom services - add your own service classes here.
 */
export type LangiumGameAddedServices = {
    validation: {
        LangiumGameValidator: LangiumGameValidator
    }
}

/**
 * Union of Langium default services and your custom services - use this as constructor parameter
 * of custom service classes.
 */
export type LangiumGameServices = LangiumServices & LangiumGameAddedServices

/**
 * Dependency injection module that overrides Langium default services and contributes the
 * declared custom services. The Langium defaults can be partially specified to override only
 * selected services, while the custom services must be fully specified.
 */
export const LangiumGameModule: Module<LangiumGameServices, PartialLangiumServices & LangiumGameAddedServices> = {
    validation: {
        ValidationRegistry: (injector) => new LangiumGameValidationRegistry(injector),
        LangiumGameValidator: () => new LangiumGameValidator()
    }
};

/**
 * Inject the full set of language services by merging three modules:
 *  - Langium default services
 *  - Services generated by langium-cli
 *  - Services specified in this file
 */
export function createLangiumGameServices(context?: DefaultModuleContext): LangiumGameServices {
    return inject(
        createDefaultModule(context),
        LangiumGameGeneratedModule,
        LangiumGameModule
    );
}
